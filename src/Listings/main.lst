C51 COMPILER V9.60.7.0   MAIN                                                              07/21/2025 21:05:10 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\bin\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\include) DEBUG OBJECTEXTEND PR
                    -INT(.\Listings\main.lst) TABS(2) OBJECT(..\bin\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include <string.h>
   3          #include "global.h"
   4          #include "delay.h"
   5          #include "lcd.h"
   6          #include "mkeys.h"
   7          #include "uart.h"
   8          
   9          // Port 3 I/Os
  10          sbit SW_PIN = P3^2;   // switch (active-low, internal pull-up)
  11          sbit LED    = P3^3;   // LED (active-low)
  12          sbit RELAY  = P3^4;   // relay (active-low)
  13          sbit BUZ    = P3^6;   // buzzer (active-low)
  14          
  15          #define MODE_UART   0
  16          #define MODE_KEYPAD 1
  17          #define MODE_SWITCH 2
  18          
  19          volatile char uart_rx_char = 0;
  20          volatile bit  uart_flag    = 0;
  21          
  22          // Two-line LCD updater
  23          void lcd_update(unsigned char mode, const char* line2) {
  24   1          Init_LCD();
  25   1          switch (mode) {
  26   2              case MODE_UART:   Set_LCD_string("UART MODE");   break;
  27   2              case MODE_KEYPAD: Set_LCD_string("KEYPAD MODE"); break;
  28   2              case MODE_SWITCH: Set_LCD_string("SWITCH MODE"); break;
  29   2              default:          Set_LCD_string("----- MODE");  break;
  30   2          }
  31   1          Set_LCD_Command(0xC0);
  32   1          Set_LCD_string(line2);
  33   1      }
  34          
  35          // UART receive ISR
  36          void uart_isr(void) interrupt 4 {
  37   1          if (RI) {
  38   2              uart_rx_char = SBUF;
  39   2              uart_flag = 1;
  40   2              RI = 0;
  41   2          }
  42   1      }
  43          
  44          void main(void) {
  45   1          char key;
  46   1          unsigned char mode;
  47   1          char msg[17];
  48   1      
  49   1          // — Init UART & Keypad & LCD —
  50   1          Config_UART();                   
  51   1          Set_UART_String("UART Initialized\r\n");
  52   1          Init_LCD();
  53   1          Config_mkeys();
  54   1      
C51 COMPILER V9.60.7.0   MAIN                                                              07/21/2025 21:05:10 PAGE 2   

  55   1          // — Init Port 3 pins —
  56   1          SW_PIN = 1;   // switch pull-up
  57   1          LED    = 0;   // LED off
  58   1          RELAY  = 1;   // relay off
  59   1          BUZ    = 1;   // buzzer off
  60   1      
  61   1          // — Initial display —
  62   1          //lcd_update(MODE_UART, "Press any key");
  63   1      
  64   1          while (1) {
  65   2              // — 1) KEYPAD (always runs) —
  66   2              key = get_key();
  67   2              if (key) {
  68   3                  mode = MODE_KEYPAD;
  69   3                  switch (key) {
  70   4                      case '1': RELAY = 0;  strcpy(msg, "KEY:1 Motor ON");   break;
  71   4                      case '2': RELAY = 1;  strcpy(msg, "KEY:2 Motor OFF");  break;
  72   4                      case '3': BUZ   = 0;  strcpy(msg, "KEY:3 Buzzer ON");  break;
  73   4                      case '4': BUZ   = 1;  strcpy(msg, "KEY:4 Buzzer OFF"); break;
  74   4                      default:  strcpy(msg, "KEY:? Unknown");               break;
  75   4                  }
  76   3                  lcd_update(mode, msg);
  77   3              }
  78   2      
  79   2              // — 2) UART (always runs) —
  80   2              if (uart_flag) {
  81   3                  uart_flag = 0;
  82   3                  key = uart_rx_char;
  83   3                  mode = MODE_UART;
  84   3                  switch (key) {
  85   4                      case 'M': RELAY = 0;  strcpy(msg, "UART:M Motor ON");   break;
  86   4                      case 'm': RELAY = 1;  strcpy(msg, "UART:m Motor OFF");  break;
  87   4                      case 'B': BUZ   = 0;  strcpy(msg, "UART:B Buzzer ON");  break;
  88   4                      case 'b': BUZ   = 1;  strcpy(msg, "UART:b Buzzer OFF"); break;
  89   4                      default:  strcpy(msg, "UART:? Unknown");               break;
  90   4                  }
  91   3                  lcd_update(mode, msg);
  92   3              }
  93   2      
  94   2              // — 3) SWITCH (only when pressed) —
  95   2              if (!SW_PIN) {
  96   3                  mode = MODE_SWITCH;
  97   3                  LED = 0;  // LED ON
  98   3                  lcd_update(mode, "SWITCH PRESSED");
  99   3      
 100   3                  // Wait here until release:
 101   3                  while (!SW_PIN);
 102   3                  delay(20);  // debounce
 103   3      
 104   3                  LED = 1;  // LED OFF
 105   3                  lcd_update(mode, "SWITCH RELEASED");
 106   3              }
 107   2      
 108   2              // loop back immediately — keypad/UART can fire again
 109   2          }
 110   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    382    ----
   CONSTANT SIZE    =    256    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.60.7.0   MAIN                                                              07/21/2025 21:05:10 PAGE 3   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
